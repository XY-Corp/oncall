name: Build and Publish Docker Image to GCP Artifact Registry

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - master

env:
  # Default values - can be overridden in workflow inputs
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: us-central1
  IMAGE_NAME: oncall
  REGISTRIES: |
    us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/oncall/oncall
    us-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/oncall/oncall
    europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/oncall/oncall

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for proper tagging
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}
      
      - name: Configure Docker to use gcloud as a credential helper
        run: |
          gcloud auth configure-docker --quiet
          # Configure Docker for Artifact Registry
          gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev --quiet
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/oncall/oncall
            us-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/oncall/oncall
            europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/oncall/oncall
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=latest
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VCS_REF=${{ github.sha }}
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
      
      
      - name: Output image information
        if: github.event_name != 'pull_request'
        run: |
          echo "## Published Images" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Get the tags from the metadata step
          tags="${{ steps.meta.outputs.tags }}"
          
          echo "### Published Tags" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          for tag in $tags; do
            echo "- \`$tag\`" >> $GITHUB_STEP_SUMMARY
          done
